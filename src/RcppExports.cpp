// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// DataFrameExample
List DataFrameExample(const DataFrame& DF);
RcppExport SEXP _RcppExamples_DataFrameExample(SEXP DFSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DataFrame& >::type DF(DFSEXP);
    rcpp_result_gen = Rcpp::wrap(DataFrameExample(DF));
    return rcpp_result_gen;
END_RCPP
}
// DateExample
List DateExample(DateVector& dv, DatetimeVector& dtv);
RcppExport SEXP _RcppExamples_DateExample(SEXP dvSEXP, SEXP dtvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DateVector& >::type dv(dvSEXP);
    Rcpp::traits::input_parameter< DatetimeVector& >::type dtv(dtvSEXP);
    rcpp_result_gen = Rcpp::wrap(DateExample(dv, dtv));
    return rcpp_result_gen;
END_RCPP
}
// ListExamples
List ListExamples(const List& rparam);
RcppExport SEXP _RcppExamples_ListExamples(SEXP rparamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP);
    rcpp_result_gen = Rcpp::wrap(ListExamples(rparam));
    return rcpp_result_gen;
END_RCPP
}
// MatrixExample
List MatrixExample(const NumericMatrix& orig);
RcppExport SEXP _RcppExamples_MatrixExample(SEXP origSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type orig(origSEXP);
    rcpp_result_gen = Rcpp::wrap(MatrixExample(orig));
    return rcpp_result_gen;
END_RCPP
}
// NumericVectorExample
List NumericVectorExample(const NumericVector& orig);
RcppExport SEXP _RcppExamples_NumericVectorExample(SEXP origSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type orig(origSEXP);
    rcpp_result_gen = Rcpp::wrap(NumericVectorExample(orig));
    return rcpp_result_gen;
END_RCPP
}
// RcppRNGs
DataFrame RcppRNGs(const int n);
RcppExport SEXP _RcppExamples_RcppRNGs(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppRNGs(n));
    return rcpp_result_gen;
END_RCPP
}
// StringVectorExample
List StringVectorExample(const StringVector& orig);
RcppExport SEXP _RcppExamples_StringVectorExample(SEXP origSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector& >::type orig(origSEXP);
    rcpp_result_gen = Rcpp::wrap(StringVectorExample(orig));
    return rcpp_result_gen;
END_RCPP
}
// factor2char
Rcpp::CharacterVector factor2char(Rcpp::IntegerVector iv);
RcppExport SEXP _RcppExamples_factor2char(SEXP ivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type iv(ivSEXP);
    rcpp_result_gen = Rcpp::wrap(factor2char(iv));
    return rcpp_result_gen;
END_RCPP
}
// char2factor
Rcpp::IntegerVector char2factor(std::vector<std::string> sv);
RcppExport SEXP _RcppExamples_char2factor(SEXP svSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type sv(svSEXP);
    rcpp_result_gen = Rcpp::wrap(char2factor(sv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppExamples_DataFrameExample", (DL_FUNC) &_RcppExamples_DataFrameExample, 1},
    {"_RcppExamples_DateExample", (DL_FUNC) &_RcppExamples_DateExample, 2},
    {"_RcppExamples_ListExamples", (DL_FUNC) &_RcppExamples_ListExamples, 1},
    {"_RcppExamples_MatrixExample", (DL_FUNC) &_RcppExamples_MatrixExample, 1},
    {"_RcppExamples_NumericVectorExample", (DL_FUNC) &_RcppExamples_NumericVectorExample, 1},
    {"_RcppExamples_RcppRNGs", (DL_FUNC) &_RcppExamples_RcppRNGs, 1},
    {"_RcppExamples_StringVectorExample", (DL_FUNC) &_RcppExamples_StringVectorExample, 1},
    {"_RcppExamples_factor2char", (DL_FUNC) &_RcppExamples_factor2char, 1},
    {"_RcppExamples_char2factor", (DL_FUNC) &_RcppExamples_char2factor, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppExamples(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
